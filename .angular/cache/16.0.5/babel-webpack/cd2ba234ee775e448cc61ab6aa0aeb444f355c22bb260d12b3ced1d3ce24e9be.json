{"ast":null,"code":"import * as i0 from \"@angular/core\";\nclass CustomPipesPipe {\n  transform(value, ...args) {\n    if (value > 10) {\n      return \"Number is greater than 10\";\n    } else {\n      return \"Number is less than 10\";\n    }\n    if (value % 2 == 0 || value / 2 == 0) {\n      return \"Number is prime\";\n    } else {\n      return \"Number is non-prime\";\n    }\n  }\n}\nCustomPipesPipe.ɵfac = function CustomPipesPipe_Factory(t) {\n  return new (t || CustomPipesPipe)();\n};\nCustomPipesPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"gretter\",\n  type: CustomPipesPipe,\n  pure: true\n});\nexport { CustomPipesPipe };","map":{"version":3,"names":["CustomPipesPipe","transform","value","args","pure"],"sources":["/home/akshaydeshmukh/Desktop/Learning/Angular/hello-world/src/app/pipes/custom-pipes.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'gretter'\n})\n\nexport class CustomPipesPipe implements PipeTransform {\n\n  transform(value: any, ...args: any[]): any {\n    if(value>10)\n    {\n      return \"Number is greater than 10\";\n    }\n    else\n    {\n      return \"Number is less than 10\"\n    }\n\n    if(value%2==0 || value/2==0){\n      return \"Number is prime\";\n    }\n    else{\n      return \"Number is non-prime\";\n    }\n    \n  }\n\n}\n"],"mappings":";AAEA,MAIaA,eAAe;EAE1BC,SAASA,CAACC,KAAU,EAAE,GAAGC,IAAW;IAClC,IAAGD,KAAK,GAAC,EAAE,EACX;MACE,OAAO,2BAA2B;KACnC,MAED;MACE,OAAO,wBAAwB;;IAGjC,IAAGA,KAAK,GAAC,CAAC,IAAE,CAAC,IAAIA,KAAK,GAAC,CAAC,IAAE,CAAC,EAAC;MAC1B,OAAO,iBAAiB;KACzB,MACG;MACF,OAAO,qBAAqB;;EAGhC;;AAnBWF,eAAe,C;mBAAfA,eAAe;AAAA;AAAfA,eAAe,C;;QAAfA,eAAe;EAAAI,IAAA;AAAA;SAAfJ,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}